type: collection.insomnia.rest/5.0
name: Scratch Pad
meta:
  id: wrk_scratchpad
  created: 1743793375227
  modified: 1743793375227
collection:
  - name: ZVPO
    meta:
      id: fld_e12a7620fbed4a72a0d1c3398d5a0a92
      created: 1743793434664
      modified: 1743793561707
      sortKey: -1743793432981
      description: >-
        # ðŸš€ Get started here


        This template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.


        ## ðŸ”– **How to use this template**


        #### **Step 1: Send requests**


        RESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.


        This collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click "Send" to see what happens.


        #### **Step 2: View responses**


        Observe the response tab for status code (200 OK), response time, and size.


        #### **Step 3: Send new Body data**


        Update or add new data in "Body" in the POST request. Typically, Body data is also used in PUT request.


        ```

        {
            "name": "Add your name in the body"
        }

         ```

        #### **Step 4: Update the variable**


        Variables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.


        #### **Step 5: Add tests in the "Scripts" tab**


        Adding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the "Test Results" tab.


        <img src="https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n" alt="" height="1530" width="2162">


        ## ðŸ’ª Pro tips


        - Use folders to group related requests and organize the collection.
            
        - Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.
            

        ## ðŸ’¡Related templates


        [API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  

        [API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  

        [Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)
    children:
      - name: test
        meta:
          id: fld_1c30f651864e456197450466ddc88f7e
          created: 1743793434665
          modified: 1743793561707
          sortKey: -1743793432980
        children:
          - url: "{{base_url}}/api/test"
            name: Test GET
            meta:
              id: req_0f6b88203e434b42a1aa5d931ef6028f
              created: 1743793434666
              modified: 1743793434666
              isPrivate: false
              description: >-
                This is a GET request and it is used to "get" data from an
                endpoint. There is no request body for a GET request, but you
                can use query parameters to help specify the resource you want
                data on (e.g., in this request, we have `id=1`).


                A successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data.
              sortKey: -1743793432979
            method: GET
            scripts:
              afterResponse: |-
                insomnia.test("Status code is 200", function () {
                    insomnia.response.to.have.status(200);
                });
            settings:
              renderRequestBody: true
              encodeUrl: true
              followRedirects: global
              cookies:
                send: true
                store: true
              rebuildPath: true
          - url: "{{base_url}}/api/test1"
            name: Post data
            meta:
              id: req_1e2e7c5ac22f4d6993c47a07a4f8bb1e
              created: 1743793434667
              modified: 1743793434667
              isPrivate: false
              description: >-
                This is a POST request, submitting data to an API via the
                request body. This request submits JSON data, and the data is
                reflected in the response.


                A successful POST request typically returns a `200 OK` or `201 Created` response code.
              sortKey: -1743793432978
            method: POST
            body:
              mimeType: application/json
              text: |-
                {
                	"name": "Add your name in the body"
                }
            parameters:
              - name: key
                value: value_here
                disabled: false
            headers:
              - name: Content-Type
                value: application/json
            scripts:
              afterResponse: >
                insomnia.test("Successful POST request", function () {
                    insomnia.expect(insomnia.response.code).to.be.oneOf([200, 201]);
                });
            settings:
              renderRequestBody: true
              encodeUrl: true
              followRedirects: global
              cookies:
                send: true
                store: true
              rebuildPath: true
      - name: files
        meta:
          id: fld_e9e66054036744d0b35f66e7309aae88
          created: 1743793434668
          modified: 1743793434668
          sortKey: -1743793432977
        children:
          - url: "{{base_url}}/file/upload"
            name: Upload file
            meta:
              id: req_9d13bcba1535442e94c98d8c5190ae37
              created: 1743793434670
              modified: 1743793434670
              isPrivate: false
              sortKey: -1743793432976
            method: POST
            body:
              params:
                - type: file
                  name: file
                  disabled: false
                  fileName: /D:/code/zvpo/target/test-file.txt
              mimeType: multipart/form-data
            settings:
              renderRequestBody: true
              encodeUrl: true
              followRedirects: global
              cookies:
                send: true
                store: true
              rebuildPath: true
          - url: "{{base_url}}/file/download/1"
            name: Download file
            meta:
              id: req_c8596d5fa06845a2a2501c0b9ee84781
              created: 1743793434672
              modified: 1743793434672
              isPrivate: false
              sortKey: -1743793432975
            method: GET
            settings:
              renderRequestBody: true
              encodeUrl: true
              followRedirects: global
              cookies:
                send: true
                store: true
              rebuildPath: true
      - name: Signatures
        meta:
          id: fld_65e2083ac3c94e51a7eca2e83e6c17e0
          created: 1743793558572
          modified: 1743793886241
          sortKey: -1743793558572
        children:
          - url: "{{base_url}}/signature/get"
            name: Get All Signatures
            meta:
              id: req_3ca68d8cf183486db554ae494f81fd6d
              created: 1743793776503
              modified: 1743794157707
              isPrivate: false
              sortKey: -1743793776503
            method: GET
            headers:
              - name: User-Agent
                value: insomnia/11.0.2
            settings:
              renderRequestBody: true
              encodeUrl: true
              followRedirects: global
              cookies:
                send: true
                store: true
              rebuildPath: true
          - url: "{{base_url}}/signature/get/diff"
            name: "Diff: Get by Since"
            meta:
              id: req_c018140067f8488c9cbd798a547153ab
              created: 1743794190654
              modified: 1743795566664
              isPrivate: false
              sortKey: -1743793604741
            method: POST
            body:
              mimeType: application/json
              text: |
                {
                	"since": "2026-01-01T00:00:00Z"
                }
            headers:
              - name: Content-Type
                value: application/json
              - name: User-Agent
                value: insomnia/11.0.2
            settings:
              renderRequestBody: true
              encodeUrl: true
              followRedirects: global
              cookies:
                send: true
                store: true
              rebuildPath: true
          - url: "{{base_url}}/signature/get/uuids"
            name: Get by UUID
            meta:
              id: req_ff96102a77604bd980be5e8323200cec
              created: 1743794510370
              modified: 1743795835873
              isPrivate: false
              description: |-
                {
                	"uuids":
                	[
                		"22997918-59e7-49d3-bbfe-759a09a23e9e",
                		"6a6657d0-66fa-4898-9102-7757e7d8bc6f"
                	]
                }
              sortKey: -1743793518860
            method: POST
            body:
              mimeType: application/json
              text: |-
                {
                	"uuids": [
                		"22997918-59e7-49d3-bbfe-759a09a23e9e",
                		"6a6657d0-66fa-4898-9102-7757e7d8bc6f"
                	]
                }
            headers:
              - name: Content-Type
                value: application/json
              - name: User-Agent
                value: insomnia/11.0.2
            settings:
              renderRequestBody: true
              encodeUrl: true
              followRedirects: global
              cookies:
                send: true
                store: true
              rebuildPath: true
    environment:
      id: "1"
      base_url: http://127.0.0.1:8080
    environmentPropertyOrder:
      "&":
        - id
        - base_url
cookieJar:
  name: Default Jar
  meta:
    id: jar_99d30891da4bdcebc63947a8fc17f076de878684
    created: 1743793401070
    modified: 1743793561705
environments:
  name: Base Environment
  meta:
    id: env_99d30891da4bdcebc63947a8fc17f076de878684
    created: 1743793400862
    modified: 1743793561706
    isPrivate: false
